// Generated by view binder compiler. Do not edit!
package com.example.shelfshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shelfshare.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardAddBook;

  @NonNull
  public final MaterialCardView cardAvailableBooks;

  @NonNull
  public final MaterialCardView cardCart;

  @NonNull
  public final MaterialCardView cardFavorites;

  @NonNull
  public final MaterialCardView cardMyBooks;

  @NonNull
  public final MaterialCardView cardProfile;

  @NonNull
  public final Toolbar toolbar;

  private ActivityDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardAddBook, @NonNull MaterialCardView cardAvailableBooks,
      @NonNull MaterialCardView cardCart, @NonNull MaterialCardView cardFavorites,
      @NonNull MaterialCardView cardMyBooks, @NonNull MaterialCardView cardProfile,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.cardAddBook = cardAddBook;
    this.cardAvailableBooks = cardAvailableBooks;
    this.cardCart = cardCart;
    this.cardFavorites = cardFavorites;
    this.cardMyBooks = cardMyBooks;
    this.cardProfile = cardProfile;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardAddBook;
      MaterialCardView cardAddBook = ViewBindings.findChildViewById(rootView, id);
      if (cardAddBook == null) {
        break missingId;
      }

      id = R.id.cardAvailableBooks;
      MaterialCardView cardAvailableBooks = ViewBindings.findChildViewById(rootView, id);
      if (cardAvailableBooks == null) {
        break missingId;
      }

      id = R.id.cardCart;
      MaterialCardView cardCart = ViewBindings.findChildViewById(rootView, id);
      if (cardCart == null) {
        break missingId;
      }

      id = R.id.cardFavorites;
      MaterialCardView cardFavorites = ViewBindings.findChildViewById(rootView, id);
      if (cardFavorites == null) {
        break missingId;
      }

      id = R.id.cardMyBooks;
      MaterialCardView cardMyBooks = ViewBindings.findChildViewById(rootView, id);
      if (cardMyBooks == null) {
        break missingId;
      }

      id = R.id.cardProfile;
      MaterialCardView cardProfile = ViewBindings.findChildViewById(rootView, id);
      if (cardProfile == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((CoordinatorLayout) rootView, cardAddBook,
          cardAvailableBooks, cardCart, cardFavorites, cardMyBooks, cardProfile, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
