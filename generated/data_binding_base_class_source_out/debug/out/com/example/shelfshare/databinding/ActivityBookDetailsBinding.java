// Generated by view binder compiler. Do not edit!
package com.example.shelfshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shelfshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnRentOrReturn;

  @NonNull
  public final ImageView ivBookCover;

  @NonNull
  public final TextView tvBookAuthor;

  @NonNull
  public final TextView tvBookLocation;

  @NonNull
  public final TextView tvBookPrice;

  @NonNull
  public final TextView tvBookTitle;

  private ActivityBookDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnRentOrReturn, @NonNull ImageView ivBookCover,
      @NonNull TextView tvBookAuthor, @NonNull TextView tvBookLocation,
      @NonNull TextView tvBookPrice, @NonNull TextView tvBookTitle) {
    this.rootView = rootView;
    this.btnRentOrReturn = btnRentOrReturn;
    this.ivBookCover = ivBookCover;
    this.tvBookAuthor = tvBookAuthor;
    this.tvBookLocation = tvBookLocation;
    this.tvBookPrice = tvBookPrice;
    this.tvBookTitle = tvBookTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRentOrReturn;
      Button btnRentOrReturn = ViewBindings.findChildViewById(rootView, id);
      if (btnRentOrReturn == null) {
        break missingId;
      }

      id = R.id.ivBookCover;
      ImageView ivBookCover = ViewBindings.findChildViewById(rootView, id);
      if (ivBookCover == null) {
        break missingId;
      }

      id = R.id.tvBookAuthor;
      TextView tvBookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvBookAuthor == null) {
        break missingId;
      }

      id = R.id.tvBookLocation;
      TextView tvBookLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvBookLocation == null) {
        break missingId;
      }

      id = R.id.tvBookPrice;
      TextView tvBookPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvBookPrice == null) {
        break missingId;
      }

      id = R.id.tvBookTitle;
      TextView tvBookTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvBookTitle == null) {
        break missingId;
      }

      return new ActivityBookDetailsBinding((LinearLayout) rootView, btnRentOrReturn, ivBookCover,
          tvBookAuthor, tvBookLocation, tvBookPrice, tvBookTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
